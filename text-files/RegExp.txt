

### üß© –ß—Ç–æ —Ç–∞–∫–æ–µ RegExp –≤ JS
- **RegExp** ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏.  
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞, –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞ –ø–æ —à–∞–±–ª–æ–Ω—É.  
- –°–æ–∑–¥–∞—ë—Ç—Å—è –ª–∏–±–æ —á–µ—Ä–µ–∑ –ª–∏—Ç–µ—Ä–∞–ª `/pattern/flags`, –ª–∏–±–æ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `new RegExp("pattern", "flags")`.  

---

### ‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–ª–∞–≥–∏
- `g` ‚Äî global, –∏—Å–∫–∞—Ç—å –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ.  
- `i` ‚Äî ignore case, –±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞.  
- `m` ‚Äî multiline, `^` –∏ `$` —Ä–∞–±–æ—Ç–∞—é—Ç –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏.  
- `s` ‚Äî dotAll, `.` –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏ –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏.  
- `u` ‚Äî unicode, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —é–Ω–∏–∫–æ–¥-—Å–∏–º–≤–æ–ª–∞–º–∏.  
- `y` ‚Äî sticky, –ø–æ–∏—Å–∫ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏.  

---

### üîç –ë–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- `.` ‚Äî –ª—é–±–æ–π —Å–∏–º–≤–æ–ª (–∫—Ä–æ–º–µ `\n`, –µ—Å–ª–∏ –Ω–µ—Ç `s`).  
- `\d` ‚Äî —Ü–∏—Ñ—Ä–∞, `\D` ‚Äî –Ω–µ —Ü–∏—Ñ—Ä–∞.  
- `\w` ‚Äî –±—É–∫–≤–∞/—Ü–∏—Ñ—Ä–∞/–ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ, `\W` ‚Äî –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ.  
- `\s` ‚Äî –ø—Ä–æ–±–µ–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª, `\S` ‚Äî –Ω–µ –ø—Ä–æ–±–µ–ª.  
- `^` ‚Äî –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏, `$` ‚Äî –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏.  
- `[...]` ‚Äî –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤.  
- `[^...]` ‚Äî –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–∞.  
- `(a|b)` ‚Äî –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞.  
- `()` ‚Äî –≥—Ä—É–ø–ø–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–π –∏–ª–∏ –Ω–µ—Ç `(?:...)`).  

---

### üî¢ –ö–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
- `*` ‚Äî 0 –∏–ª–∏ –±–æ–ª—å—à–µ.  
- `+` ‚Äî 1 –∏–ª–∏ –±–æ–ª—å—à–µ.  
- `?` ‚Äî 0 –∏–ª–∏ 1.  
- `{n}` ‚Äî —Ä–æ–≤–Ω–æ n —Ä–∞–∑.  
- `{n,}` ‚Äî n –∏–ª–∏ –±–æ–ª—å—à–µ.  
- `{n,m}` ‚Äî –æ—Ç n –¥–æ m —Ä–∞–∑.  
- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∂–∞–¥–Ω—ã–µ, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ª–µ–Ω–∏–≤—ã–º–∏: `*?`, `+?`, `??`.  

---

### üß™ –ú–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã
- `regexp.test(str)` ‚Üí `true/false` (–µ—Å—Ç—å –ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ).  
- `regexp.exec(str)` ‚Üí –º–∞—Å—Å–∏–≤ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π (—Å –≥—Ä—É–ø–ø–∞–º–∏).  
- `str.match(regexp)` ‚Üí –º–∞—Å—Å–∏–≤ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π (–∏–ª–∏ `null`).  
- `str.matchAll(regexp)` ‚Üí –∏—Ç–µ—Ä–∞—Ç–æ—Ä –≤—Å–µ—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.  
- `str.replace(regexp, replacement)` ‚Üí –∑–∞–º–µ–Ω–∞.  
- `str.split(regexp)` ‚Üí —Ä–∞–∑–±–∏–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏.  
- `str.search(regexp)` ‚Üí –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è.  

---

### üì¶ –ü—Ä–∏–º–µ—Ä—ã
```js
// –ü—Ä–æ–≤–µ—Ä–∫–∞ email
const email = "test@mail.com";
console.log(/^[\w.-]+@[\w.-]+\.\w{2,}$/.test(email)); // true

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Å–µ–ª
const str = "–¶–µ–Ω–∞: 1200 —Ä—É–±, —Å–∫–∏–¥–∫–∞ 300 —Ä—É–±";
console.log(str.match(/\d+/g)); // ["1200", "300"]

// –ó–∞–º–µ–Ω–∞
console.log("2025-09-27".replace(/-/g, "/")); // "2025/09/27"
```

---

### üß≠ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –≤—ã–≤–æ–¥
- **RegExp ‚Äî —á–∞—Å—Ç—å —è–∑—ã–∫–∞ JS**, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.  
- –†–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ Node, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è ECMAScript.  
- –û—Ç–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º, —á—Ç–æ –±—Ä–∞—É–∑–µ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RegExp –¥–ª—è DOM‚Äë–æ–ø–µ—Ä–∞—Ü–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º), –∞ Node ‚Äî –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤, –ª–æ–≥–æ–≤ –∏ —Å–µ—Ç–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.  

